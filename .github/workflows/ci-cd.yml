name: CI/CD Pipeline
on:
  push:
    branches: [main]
    tags: ["v*.*.*"] # Matches semantic version tags like v0.0.1
  pull_request:
    branches: [main]
env:
  IMAGE_NAME: thienhaole92/auto-go-app
  GO_VERSION: "1.23.11"
  DOCKER_BUILDX_VERSION: latest
  DOCKER_BUILDX_DRIVER: docker-container
jobs:
  lint:
    name: Lint and Validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Run make lint
        run: make lint
  test:
    name: Run Tests
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Run tests
        run: make test-go
  build-and-push:
    name: Build and Push Docker Image
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    # Only run for main branch or tags (not for PRs)
    if: github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: ${{ env.DOCKER_BUILDX_VERSION }}
          driver: ${{ env.DOCKER_BUILDX_DRIVER }}
          platforms: linux/amd64,linux/arm64 # Multi-architecture support
          install: true
      - name: Login to Docker Hub
        if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Determine tags
        id: tags
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            version=${GITHUB_REF#refs/tags/v}
            echo "version_tag=$version" >> $GITHUB_OUTPUT
            echo "tags=$IMAGE_NAME:$version,$IMAGE_NAME:latest" >> $GITHUB_OUTPUT
          else
            echo "tags=$IMAGE_NAME:latest" >> $GITHUB_OUTPUT
          fi
        env:
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/') }}
          tags: ${{ steps.tags.outputs.tags }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILDKIT_INLINE_CACHE=1
